_ = require('lodash')
Docker = require('dockerode')
async = require('async')
Is = require('is_js')
generatePassword = require('password-generator')
exports = module.exports = {}
if process.env.HUBOT_DOCKER_HOST
  options =
    host: process.env.HUBOT_DOCKER_HOST
    port: process.env.HUBOT_DOCKER_PORT
    timeout: 10000
else
  options =
    socketPath: process.env.HUBOT_DOCKER_SOCKET or '/var/run/docker.sock'
    timeout: 10000
docker = new Docker(options)

exports.create = (callback) ->
  password = generatePassword(8, false)
  docker.createContainer {
    name: 'devbox-hubot'
    Image: 'twistedogic/codebox:latest'
    Cmd: [
      '/workspace'
      '-u'
      'notroot:' + password
      '-p'
      '8000'
    ]
  }, (err, res) ->
    if !err
      container = docker.getContainer(res.id)
      container.start (err, data) ->
        container.inspect (err, data) ->
          if !err
            callback null,JSON.stringify(
              ip: data.NetworkSettings.IPAddress
              password: password)
          else
            callback err
          return
        return
    return
  return

stopAndRemove = (input, callback) ->
  container = docker.getContainer(input)
  container.stop (err, r) ->
    if err
      callback err
    else
      container.remove { v: 1 }, (e, d) ->
        if e
          callback e
        else
          callback null, input
        return
    return
  return

exports.remove = (callback) ->
  docker.listContainers { all: true }, (err, containers) ->
    list = []
    _.each containers, (n) ->
      name = n.Names[0]
      image = n.Image
      status = n.Status
      if name.indexOf('devbox-hubot') > -1 and status.indexOf('Exited') == -1
        list.push n.Id
      return
    async.map list, stopAndRemove, (err, res) ->
      if err
        callback err
      else
        callback null, 'removed'
      return
    return
  return

# ---
# generated by js2coffee 2.1.0